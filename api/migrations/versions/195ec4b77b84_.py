"""empty message

Revision ID: 195ec4b77b84
Revises: 1c2fcbdc7b0f
Create Date: 2023-11-08 18:49:09.644218

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '195ec4b77b84'
down_revision = '1c2fcbdc7b0f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('warehouse_spaces',
    sa.Column('space_id', sa.Integer(), nullable=False),
    sa.Column('capacity', sa.Float(), nullable=False),
    sa.Column('availability', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('space_id')
    )
    op.create_table('deliveries',
    sa.Column('delivery_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('delivery_address', sa.String(length=255), nullable=False),
    sa.Column('delivery_status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('delivery_id')
    )
    op.create_table('pickups',
    sa.Column('pickup_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('pickup_address', sa.String(length=255), nullable=False),
    sa.Column('pickup_status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('pickup_id')
    )
    op.create_table('shippings',
    sa.Column('shipping_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('shipping_address', sa.String(length=255), nullable=False),
    sa.Column('shipping_status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('shipping_id')
    )
    op.create_table('stored_items',
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('space_id', sa.Integer(), nullable=False),
    sa.Column('item_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('image', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['space_id'], ['warehouse_spaces.space_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('item_id')
    )
    op.create_table('inventory',
    sa.Column('inventory_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['stored_items.item_id'], ),
    sa.PrimaryKeyConstraint('inventory_id'),
    sa.UniqueConstraint('item_id')
    )
    op.create_table('transactions',
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('delivery_id', sa.Integer(), nullable=True),
    sa.Column('pickup_id', sa.Integer(), nullable=True),
    sa.Column('shipping_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['delivery_id'], ['deliveries.delivery_id'], ),
    sa.ForeignKeyConstraint(['item_id'], ['stored_items.item_id'], ),
    sa.ForeignKeyConstraint(['pickup_id'], ['pickups.pickup_id'], ),
    sa.ForeignKeyConstraint(['shipping_id'], ['shippings.shipping_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('transaction_id')
    )
    op.create_table('receipts',
    sa.Column('receipt_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=False),
    sa.Column('receipt_type', sa.String(length=20), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.transaction_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('receipt_id')
    )
    op.drop_table('storage_spaces')
    op.drop_table('notifications')
    op.drop_table('reviews')
    op.drop_table('logs')
    op.drop_table('orders')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.drop_column('address')
        batch_op.drop_column('role')
        batch_op.drop_column('phone_number')
        batch_op.drop_column('profile_picture')
        batch_op.drop_column('created_at')
        batch_op.drop_column('gender')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('bio')
        batch_op.drop_column('full_name')
        batch_op.drop_column('date_of_birth')
        batch_op.drop_column('public_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('public_id', sa.VARCHAR(length=50), nullable=False))
        batch_op.add_column(sa.Column('date_of_birth', sa.DATE(), nullable=True))
        batch_op.add_column(sa.Column('full_name', sa.VARCHAR(length=150), nullable=False))
        batch_op.add_column(sa.Column('bio', sa.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('gender', sa.VARCHAR(length=10), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('profile_picture', sa.VARCHAR(length=300), nullable=True))
        batch_op.add_column(sa.Column('phone_number', sa.VARCHAR(length=15), nullable=False))
        batch_op.add_column(sa.Column('role', sa.VARCHAR(length=50), nullable=False))
        batch_op.add_column(sa.Column('address', sa.VARCHAR(length=255), nullable=True))
        batch_op.alter_column('email',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)
        batch_op.alter_column('password',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)

    op.create_table('orders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('delivery_date', sa.DATETIME(), nullable=False),
    sa.Column('order_reference_code', sa.VARCHAR(length=50), nullable=True),
    sa.Column('invoice', sa.VARCHAR(length=100), nullable=True),
    sa.Column('payment_method', sa.VARCHAR(length=50), nullable=True),
    sa.Column('number_of_items', sa.INTEGER(), nullable=True),
    sa.Column('order_reference', sa.VARCHAR(length=50), nullable=True),
    sa.Column('booking_date', sa.DATETIME(), nullable=False),
    sa.Column('order_date', sa.DATETIME(), nullable=True),
    sa.Column('booking_status', sa.VARCHAR(length=50), nullable=False),
    sa.Column('total_price', sa.FLOAT(), nullable=False),
    sa.Column('payment_status', sa.VARCHAR(length=50), nullable=False),
    sa.Column('pickup_date_scheduled', sa.DATETIME(), nullable=False),
    sa.Column('pickup_date_actual', sa.DATETIME(), nullable=False),
    sa.Column('packed', sa.BOOLEAN(), nullable=False),
    sa.Column('pickup_address', sa.VARCHAR(length=255), nullable=True),
    sa.Column('pickup_status', sa.BOOLEAN(), nullable=True),
    sa.Column('shipment_status', sa.VARCHAR(length=50), nullable=True),
    sa.Column('shipment_tracking_number', sa.VARCHAR(length=50), nullable=True),
    sa.Column('shipment_carrier', sa.VARCHAR(length=50), nullable=True),
    sa.Column('shipment_eta', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_reference'),
    sa.UniqueConstraint('order_reference_code')
    )
    op.create_table('logs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('action', sa.VARCHAR(length=255), nullable=False),
    sa.Column('timestamp', sa.DATETIME(), nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('order_id', sa.INTEGER(), nullable=False),
    sa.Column('rating', sa.INTEGER(), nullable=False),
    sa.Column('comment', sa.TEXT(), nullable=True),
    sa.Column('review_date', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('message', sa.VARCHAR(length=255), nullable=False),
    sa.Column('notification_date', sa.DATETIME(), nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('storage_spaces',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('size', sa.VARCHAR(length=50), nullable=False),
    sa.Column('capacity', sa.INTEGER(), nullable=False),
    sa.Column('price_per_month', sa.FLOAT(), nullable=False),
    sa.Column('available', sa.BOOLEAN(), nullable=False),
    sa.Column('address', sa.VARCHAR(length=255), nullable=False),
    sa.Column('latitude', sa.FLOAT(), nullable=False),
    sa.Column('longitude', sa.FLOAT(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('receipts')
    op.drop_table('transactions')
    op.drop_table('inventory')
    op.drop_table('stored_items')
    op.drop_table('shippings')
    op.drop_table('pickups')
    op.drop_table('deliveries')
    op.drop_table('warehouse_spaces')
    # ### end Alembic commands ###
